# Generated by Django 5.1.5 on 2025-02-08 16:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_photo', models.ImageField(null=True, upload_to='users/')),
                ('cpf', models.CharField(max_length=12, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('endereco', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EcoTripStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TravelCompanionPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TravelPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EcoGuide',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(blank=True, null=True)),
                ('especialidade', models.CharField(choices=[('floresta', 'Floresta'), ('cachoeira', 'Cachoeira')], max_length=15)),
                ('formacao', models.CharField(blank=True, max_length=15, null=True)),
                ('licenca', models.CharField(default=0, max_length=15)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('user_app.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genero', models.CharField(blank=True, choices=[('Feminino', 'Feminino'), ('Masculino', 'Masculino'), ('Outro', 'Outro')], max_length=15, null=True)),
                ('faixa_etaria', models.CharField(blank=True, choices=[('18-24', '18-24 anos'), ('25-34', '25-34 anos'), ('35-44', '35-44 anos'), ('45-54', '45-54 anos'), ('55+', '55+ anos')], max_length=15, null=True)),
                ('pais_regiao', models.CharField(blank=True, max_length=50, null=True)),
                ('viagens_anuais', models.CharField(blank=True, choices=[('Nunca', 'Nunca'), ('1-2', '1-2 vezes'), ('3-5', '3-5 vezes'), ('5+', '5+ vezes')], max_length=15, null=True)),
                ('orcamento_medio', models.CharField(blank=True, choices=[('$', '$'), ('$$', '$$'), ('$$$', '$$$'), ('$$$$', '$$$$'), ('$$$$$', '$$$$$')], max_length=5, null=True)),
                ('importancia_sustentabilidade', models.CharField(blank=True, choices=[('Muito importante', 'Muito importante'), ('Importante', 'Importante'), ('Pouco importante', 'Pouco importante'), ('Nada importante', 'Nada importante')], max_length=20, null=True)),
                ('pagaria_por_servicos_sustentaveis', models.CharField(blank=True, choices=[('Sim, sem problemas!', 'Sim, sem problemas!'), ('Sim, mas até um limite', 'Sim, mas até um limite'), ('Não', 'Não')], max_length=30, null=True)),
                ('participa_ecoturismo', models.CharField(blank=True, choices=[('Sim, frequentemente', 'Sim, frequentemente'), ('Sim, às vezes', 'Sim, às vezes'), ('Não, mas tenho interesse', 'Não, mas tenho interesse'), ('Não tenho interesse', 'Não tenho interesse')], max_length=50, null=True)),
                ('estilo_ecotrip', models.ManyToManyField(blank=True, to='user_app.ecotripstyle')),
                ('prefere_viajar_com', models.ManyToManyField(blank=True, to='user_app.travelcompanionpreference')),
                ('prioridade_viagem', models.ManyToManyField(blank=True, to='user_app.travelpriority')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
